
/**
 * This function must be called once and only once from BaseLayout.
 */
export function createState(inParentComponent) {

  return {


    // Flag: Is the please wait dialog visible?
    pleaseWaitVisible : false,

    // List of users.
    users : [ ],

    // List of conversations.
    conversations : [ ],

    // List of messages in the current conversation.
    messages : [ ],

    // The view that is currently showing ("welcome", "message", "compose", "contact" or "contactAdd").
    currentView : "welcome",

    // The currently selected Conversation, if any.
    currentConversation : null,

    // The details of the message currently being viewed or composed, if any.
    messageID : null,
    messageDate : null,
    messageFrom : null,
    messageBody : null,

    // The details of the contact currently being viewed or added, if any.
    UserID : null,
    UserName : null,
    UserEmail : null,

    // ------------------------------------------------------------------------------------------------
    // ------------------------------------ Event Handler functions -----------------------------------
    // ------------------------------------------------------------------------------------------------


    /**
     * Set the current Conversation.
     *
     * @param inPath The path of the current Conversation.
     */
    setCurrentConversation : function(inPath: String): void {

      console.log("state.setCurrentConversation()", inPath);

      // Update state.
      this.setState({ currentView : "welcome", currentConversation : inPath });

      // Now go get the list of messages for the Conversation.
      this.state.getMessages(inPath);

    }.bind(inParentComponent), /* End setCurrentConversation(). */


    /**
     * Fires any time the user types in an editable field.
     *
     * @param inEvent The event object generated by the keypress.
     */
    fieldChangeHandler : function(inEvent: any): void {

      console.log("state.fieldChangeHandler()", inEvent.target.id, inEvent.target.value);

      // Enforce max length for contact name.
      if (inEvent.target.id === "contactName" && inEvent.target.value.length > 16) { return; }

      this.setState({ [inEvent.target.id] : inEvent.target.value });

    }.bind(inParentComponent), /* End fieldChangeHandler(). */


    /**
     * Delete a message (from the server and the contact list).
     */
    sendMessage : async function(): Promise<void> {

      console.log("state.sendMessage()", this.state.currentConversation, this.state.messageFrom, this.state.messageBody);

      // Update state.
      this.setState({ currentView : "welcome" });

    }.bind(inParentComponent) /* End sendMessage(). */


  };

} /* End createState(). */
